<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.rozuur.spring.opinionated</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Opinionated Spring Boot</description>

	<properties>
		<java.version>11</java.version>
		<jdk.version>11</jdk.version>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
		<springfox-swagger.version>2.9.2</springfox-swagger.version>

		<!-- mvn plugins -->
		<formatter-maven-plugin.version>2.10.0</formatter-maven-plugin.version>
		<impsort-maven-plugin.version>1.3.2</impsort-maven-plugin.version>
		<maven-pmd-plugin.version>3.13.0</maven-pmd-plugin.version>
		<spotbugs-maven-plugin.version>3.1.12.2</spotbugs-maven-plugin.version>
		<spotbugs.version>4.0.0</spotbugs.version>
		<modernizer-maven-plugin.version>2.1.0</modernizer-maven-plugin.version>
		<maven-scm-plugin.version>1.11.2</maven-scm-plugin.version>
	</properties>

	<dependencies>
		<!-- Third party libraries -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-swagger.version}</version>
		</dependency>

		<!-- Spring supported libraries -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-java8</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Remove unused imports -->
			<plugin>
				<groupId>net.revelc.code</groupId>
				<artifactId>impsort-maven-plugin</artifactId>
				<version>${impsort-maven-plugin.version}</version>
				<configuration>
					<!-- Following groups closely match Intellij's format order -->
					<groups>com.,lombok.,net.,org.,javax.,java.</groups>
					<removeUnused>true</removeUnused>
					<staticAfter>true</staticAfter>
				</configuration>
				<executions>
					<execution>
						<id>sort-imports</id>
						<goals>
							<goal>sort</goal>
						</goals>
					</execution>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Auto format code during compilation -->
			<plugin>
				<groupId>net.revelc.code.formatter</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<version>${formatter-maven-plugin.version}</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<configFile>${project.basedir}/tools/formatter-maven-plugin/eclipse/java.xml</configFile>
					<configJsFile>${project.basedir}/tools/formatter-maven-plugin/eclipse/javascript.xml</configJsFile>
					<directories>
						<directory>${project.build.sourceDirectory}</directory>
					</directories>
				</configuration>
				<executions>
					<execution>
						<id>format</id>
						<goals>
							<goal>format</goal>
						</goals>
						<phase>process-resources</phase>
					</execution>
					<execution>
						<id>validate</id>
						<goals>
							<goal>validate</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
			</plugin>

			<!-- Static analysis using PMD -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven-pmd-plugin.version}</version>
				<configuration>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>${jdk.version}</targetJdk>
					<linkXRef>false</linkXRef>
					<excludes>
						<exclude>**/*Test.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>${project.basedir}/target/generated-sources</excludeRoot>
					</excludeRoots>
					<skipEmptyReport>false</skipEmptyReport>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Static analysis using spotbugs -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs-maven-plugin.version}</version>
				<configuration>
					<excludeFilterFile>${project.basedir}/tools/spotbugs/ignore.xml</excludeFilterFile>
				</configuration>
				<dependencies>
					<!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>${spotbugs.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Avoid java legacy API's -->
			<plugin>
				<groupId>org.gaul</groupId>
				<artifactId>modernizer-maven-plugin</artifactId>
				<version>${modernizer-maven-plugin.version}</version>
				<configuration>
					<javaVersion>${java.version}</javaVersion>
				</configuration>
				<executions>
					<execution>
						<id>modernizer</id>
						<goals>
							<goal>modernizer</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Include git info with actuator -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<configuration>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<offline>true</offline>
				</configuration>
			</plugin>

			<!-- Checks for any uncommitted changes and fail the build if there are any -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>${maven-scm-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>check-local-modification</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>

			<!-- Enforce maven -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<configuration>
					<rules>
						<requireMavenVersion>
							<version>[3.3.3,)</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<version>[11,)</version>
						</requireJavaVersion>
					</rules>
				</configuration>
				<executions>
					<execution>
						<id>enforce</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<banDuplicatePomDependencyVersions />
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Test reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

		</plugins>
	</build>

</project>
